@model WebAutomationSystem.DataModelLayer.Entities.Notation
@using WebAutomationSystem.CommonLayer.PublicClass

@{
    ViewData["Title"] = "ثبت و ارسال یادداشت";
}

<style>
     .swal2-modal {
        width: 280px !important;
        padding: 10px !important;
    }
</style>

<div class="content">

    <div class="panel panel-heading" style="box-shadow: 3px 1px 1px 0 #cbcbcb; border-radius: 2px;">
        <span style="font-weight:bold;">
            <i class="icon-notebook"></i>
            فرم ایجاد و ارسال یادداشت
        </span>
    </div>


    <div class="panel panel-body container-fluid" style="border-radius:px; box-shadow:3px 1px 1px 0 #cbcbcb;
                background-color:#ebebeb;">

        <div class="col-md-6 col-xs-12">
            <form class="panel panel-body overflow-auto"
                  style="border-radius:px; height:400px; box-shadow:3px 1px 1px 0 #cbcbcb; background-color:#d7d1d1;">

                <div class="row" style="height:45px;">
                    <label class="col-md-4 col-xs-12">تاریخ یادداشت :</label>
                    <div class="col-md-8 col-xs-12">
                        <div style="color:darkgreen;">@ConvertDateTime.ConvertMiladiToShamsi(DateTime.Now, "yyyy/MM/dd")</div>
                    </div>
                </div>

                <!--NotationTitle-->
                <div>
                    <label class="control-label col-md-4 col-xs-12">موضوع یادداشت :</label>
                    <div class="col-md-8 col-xs-12">
                        <input asp-for="NotationTitle" type="text" class="form-control custominput" placeholder="موضوع یادداشت..." autocomplete="off" />

                    </div>
                </div>

                <!--ReminderContent-->
                <div>
                    <label class="control-label col-md-4 col-xs-12">متن یادداشت :</label>
                    <div class="col-md-8 col-xs-12">
                        <textarea asp-for="NotationContent" rows="8" type="text" class="form-control custominput" placeholder="متن یادداشت..." autocomplete="off"></textarea>

                    </div>
                </div>
            </form>


        </div>

        <div id="divtreeview" class="col-md-6 col-xs-12" style="height:400px;">
            <div class="panel panel-body overflow-auto"
                 style="border-radius:px; height:400px; box-shadow:3px 1px 1px 0 #cbcbcb; background-color:#d7d1d1;">
                <div id="jstreejobs"></div>
            </div>
        </div>
        <input id="SelectedUserToSent" name="SelectedUserToSent" type="text" class="hidden" />
        <div class="col-xs-12 form-group" style="margin-top:15px;">
            <button id="btnsentnotation" 
                    class="btn btn-outline-primary pull-right">
                ایجاد و ارسال یادداشت
            </button>
        </div>
    </div>

</div>

@section UserScripts{
    <script>
        $(function () {
            $("#jstreejobs").on("changed.jstree", function (e, data) {

                var i, j;
                var postedItems = [];

                j = data.selected.length;
                for (var i = 0; i < j; i++) {
                    postedItems.push({
                        text: data.instance.get_node(data.selected[i]).text,
                        id: data.selected[i],
                        parent: data.node.parents[0]
                    });
                }
                if (data.selected.length) {
                    $("#JobID").val(postedItems[0].id);
                }
                ///////////////////////////////////////
                $("#SelectedUserToSent").val(JSON.stringify(postedItems));
                ///////////////////////////////////////
            }).jstree({
                "core": {
                    "themes": {
                        "variant":"large"
                    },
                    "data":  @Html.Raw(ViewBag.JobJson) ,
                },
                "checkbox": {
                    "Keep_selected_style":false
                },
                "plugins": ["checkbox"],
                checkbox: {three_state: false, cascade:""}
            }).on("loaded.jstree", function () {
                $.jstree.reference('#jstreejobs').open_all();
                h1('@ViewBag.userJobId');

            });
        });

        function h1(data) {
            //عدد
            parentNode = $('#jstreejobs').jstree(true).get_parent(data);
            //آرایه
            childrenNode = $('#jstreejobs').jstree(true).get_node(data).children;
            //آرایه
            siblingsNode = [];

            //تبدیل پرنت نود به یک آرایه
            prnode = [];
            prnode.push(parentNode);

            //بدست آوردن همترازهای همگروه
            $('#jstreejobs').jstree(true).get_node(parentNode).children.forEach(function (c) {
                if (c !== data) siblingsNode.push(c);
            });

            //نگهدار همه آی دی های مشاغل
            var AllIdjobList = [];
            AllIdjobList = @ViewBag.JobIdList;

            //حذف فرزندان از آرایه همه مشاغل
            for (var i = 0; i < childrenNode.length; i++) {
                removeItem(AllIdjobList, childrenNode[i]);
            }
            //حذف همترازها از آرایه همه مشاغل
            for (var i = 0; i < siblingsNode.length; i++) {
                removeItem(AllIdjobList, siblingsNode[i]);
            }
            //حذف پرنت از آرایه همه مشاغل
            removeItem(AllIdjobList, prnode[0]);

            //غیر فعال کردن همه مشاغل غیر مجاز
              for (var i = 0; i <= AllIdjobList.length; i++) {
                  $.jstree.reference('#jstreejobs').disable_node(AllIdjobList[i]);
              }

            //console.log('child = ' + JSON.stringify(childrenNode));
            //console.log('parent = ' + JSON.stringify(prnode));
            //console.log('siblings = ' + JSON.stringify(siblingsNode));
            //console.log('All = ' + JSON.stringify(AllIdjobList));
        }

        //تابع حذف سلول از آرایه
        function removeItem(arrayTag, itemTag) {
            for (var i in arrayTag) {
                if ($.trim(arrayTag[i]).replace(/ /g, "") == itemTag) {
                    arrayTag.splice(i, 1);
                    break;
                }
            }
    }

         //ارسال یادداشت
        $("#btnsentnotation").on('click', function (e) {
            e.preventDefault();

            //کنترل خالی نبودن موضوع یادداشت
            if ($("#NotationTitle").val().trim() == '') {
                swal({
                        title: "نقص اطلاعات",
                        text: "موضوع یادداشت وارد نشده است",
                        type: 'warning',
                        showCancelButton: false,
                        allowOutsideClick: false,
                        confirmButtonColor: "red",
                        confirmButtonText:"باشه"
                    })
                return false;
            }

              //کنترل خالی نبودن متن یادداشت
            if ($("#NotationContent").val().trim() == '') {
                swal({
                        title: "نقص اطلاعات",
                        text: "متن یادداشت وارد نشده است",
                        type: 'warning',
                        showCancelButton: false,
                        allowOutsideClick: false,
                        confirmButtonColor: "red",
                        confirmButtonText:"باشه"
                    })
                return false;
            }

            //کنترل اینکه کاربر حتما یک شخص را جهت ارسال نامه انتخاب کرده باشد
            if ($("#SelectedUserToSent").val() == "" || $("#SelectedUserToSent").val() == '[]') {
                swal({
                    title: "عدم ارسال",
                    text: "هیچ شخصی جهت ارسال یادداشت انتخاب نشده است",
                    type: 'warning',
                    showCancelButton: false,
                    allowOutsideClick: false,
                    confirmButtonColor: "red",
                    confirmButtonText: "باشه"
                });
                return false;
            }



            $.ajax({
                type: "Post",
                url: '@Url.Action("SentNotation","Notation")',
                data: {
                    'SelectedUserToSent': $("#SelectedUserToSent").val(),
                    'NotationTitle': $("#NotationTitle").val(),
                    'NotationContent': $("#NotationContent").val(),
                }
            }).done(function (result) {

                if (result.status == 'nouserselected') {
                             swal({
                    title: "عدم ارسال",
                    text: "هیچ شخصی جهت ارسال یادداشت انتخاب نشده است",
                    type: 'warning',
                    showCancelButton: false,
                    allowOutsideClick: false,
                    confirmButtonColor: "red",
                    confirmButtonText: "باشه"
                });
                }
                if (result.status == 'justoneperson') {
                             swal({
                    title: "عدم ارسال",
                    text: "شما فقط برای یک شخص می توانید یادداشت ارسال کنید.",
                    type: 'warning',
                    showCancelButton: false,
                    allowOutsideClick: false,
                    confirmButtonColor: "red",
                    confirmButtonText: "باشه"
                });
                }
                if (result.status == 'error') {
                swal({
                    title: "ایجاد خطا",
                    text: "در ارتباط با سرور خطایی رخ داد",
                    type: 'warning',
                    showCancelButton: false,
                    allowOutsideClick: false,
                    confirmButtonColor: "red",
                    confirmButtonText: "باشه"
                });
                }
                if (result.status == 'ok') {
                    swal({
                        title: "ارسال یادداشت",
                        text: "یادداشت شما با موفقیت ارسال شد",
                        type: 'success',
                        showCancelButton: false,
                        allowOutsideClick: false,
                        confirmButtonColor: "green",
                        confirmButtonText:"باشه"
                    }).then(function () {
                        window.location.reload(true);
                    });
                }

            });
        });
    </script>
}